let answer = ''; // загаданное слово
let answerState = ''; // состояние загаданного слова (угадываешь буквы - звёздочки заменяются этими буквами)
let mistakesCount = 0; // количество ошибок
let lettersState; // состояние клавиатуры (угадал букву - появляется кружок, нет - зачёркивается)

startGame();

function startGame() { // старт игры
  mistakesCount = 0; // 1. Сбросьте количество допущенных ошибок до нуля.
  lettersState = getDefaultKeyboard(); // 2. Сбросьте состояние клавиатуры в начальное состояние.
  drawPerson(mistakesCount); // 3. Отрисуйте начальное состояние игрового персонажа.
  drawBoard(lettersState); // 4. Отрисуйте состояние клавиатуры.
  generateWord(); // 5. Сгенерируйте новое слово (с помощью generateWord).
}

function generateWord() { // генерирование слова
  // 1. Сгенерируйте целое число от 0 до длины массива dictionary.
  // 2. По сгенерированному числу получите элемент из массива dictionary. Этот элемент запишите в переменную answer.
  // 3. Сгенерируйте строку с символами "*" длины сгенерированного слова. Полученная строка должна быть записана в answerState.
  // 4. Отрисовывайте начальное состояние отгаданного слова.
  answer = dictionary[Math.floor(Math.random() * dictionary.length)]; // сгенерированное загаданное слово
  answerState = new Array(answer.length).fill('*').join(''); // начальное состояние загаданного слова (звёздочки)
  drawAnswerState(answerState);
}

function onKeyClick(letter) { // отгадывание слова
  // 1. Проверьте проигрыш игры.
  // 1.1. Если количество ошибок равно 7, то выводите конец игры. Дополнительно можно выводить неотгаданное слово.
  // 1.2. Начинайте новую игру.
  // 1.3. Остальные действия выполняйте, если игра не закончена.
  if (mistakesCount === 7) {
    alert(`Конец игры(\nЗагаданное слово: ${answer}`);
    startGame();
    return;
  }
  
  // 2. В состоянии клавиатуры (lettersState) найдите кликнутый символ (letter). Найденый символ сохраняйте в отдельную переменную (например, letterFromState).
  let letterFromState; // найденый символ
  for (let i = 0; i < lettersState.length; i++) {
    if (lettersState[i].char === letter) {
      letterFromState = lettersState[i];
      break;
    }
  }

  // 3. Проверьте: отсутсвует ли кликнутый символ в ответе игры? И не отмечен ли символ уже отмеченным как ошибочный (error)?
  // 3.1. Увеличьте количество ошибок на 1.
  // 3.2. Отметьте символ свойством `error`.
  if (!answer.includes(letter) && !letterFromState.error) { // Если нет кликнутого символа, и нет пометки как ошибочный символ 
    mistakesCount++;
    letterFromState.error = true;
  }
  
  // 4. Проверьте: присутсвует ли кликнутый символ в ответе игры? И не отмечен ли символ уже отмеченным как успешный (success)?
  // 4.1. Отметьте символ свойством success.
  // 4.2. Измените необходимые символы "*" на кликнутый символ. Изменения необходимо выполнять только символов, у которых позиция в ответе совпадает с позицией состояния.
  /* Пример: 
  - Состояние игры: '**********'
  - Загаданное слово: "фотография"
  - Пользователь кликает на "о"
  - Состояние должно измениться на: '*о*о******'
  - Пользователь кликает на "ф"
  - Состояние должно измениться на: 'фо*о***ф**'
  - Пользователь кликает на "т"
  - Состояние должно измениться на: 'фото***ф**' */
  if (answer.includes(letter) && !letterFromState.success) { // Если есть кликнутый символ, и нет пометки как успешный символ
    letterFromState.success = true;
    let answerStateArray = answerState.split(''); // Разделяет строку на буквы. Сделали массив, чтобы заменять звездочки на буквы.
    
    for (let i = 0; i < answer.length; i++) {
      if (answer[i] === letter) {
        answerStateArray[i] = letter;
      }
    }
    answerState = answerStateArray.join(''); // Из букв обратно склеиваем строку (кавычки пустые).
  }

  drawPerson(mistakesCount); // 5. Перерисовывайте состояние игрока с текущим количеством жизней.
  drawBoard(lettersState); // 6. Перерисовывайте состояние клавиатуры.
  drawAnswerState(answerState); // 7. Перерисовывайте состояние отгаданного слова.

  // 8. Проверьте, совпадает ли состояние отгаданного слова с ответом игры?
  // 8.1. Отображайте победу игрока, если пользователь угадал слово.
  if (answer === answerState) {
    winGame(); 
  }
}